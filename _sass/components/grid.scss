
@use "sass:math";

/**
 * Standard Grid - TODO
 *
 * row
 *   column small-12 medium-6 large-4
 *
 * Block Grid
 *
 * row small-up-1 medium-up-3 large-up-6
 *   column
 */

$grid-row-width: 100%;
$grid-max-cols: 12;
$block-grid-max-cols: 12;
$half-gutter: math.div($global-gutter, 2);

@mixin grid-row($size) {
  @for $i from 1 through $grid-max-cols {
    &.#{$size}-#{$i} {
      width: percentage(math.div($i, $grid-max-cols));
    }
  }
}

@mixin block-grid ($per-row) {
  & > .column {
    width: (math.div(100%, $per-row));

    $nth: #{$per-row}n + '+' + 1;
    &:nth-of-type(n) { clear: none; }
    &:nth-of-type(#{$nth}) { clear: both; }
  }
}

@mixin block-grids($size) {
  @for $i from 1 through $block-grid-max-cols {
    .#{$size}-up-#{$i}  { @include block-grid($i); }
  }
}

.row {
  padding: 0;
  margin-left: -$half-gutter;
  margin-right: -$half-gutter;
  @include clearfix;

  &[class*="-up-"] {
    & > .column {
      display: block;
      float: left;
      margin: 0;
      padding: 0 $half-gutter $global-gutter $half-gutter;
    }
  }

  & > .column {
    float: left;

    padding-left: $half-gutter;
    padding-right: $half-gutter;

    @include grid-row('small');
    @include tablet-up { @include grid-row('medium'); }
    @include desktop-up { @include grid-row('large'); }
  }
}

@include phone-only { @include block-grids('small') }
@include tablet-up { @include block-grids('medium') }
@include desktop-up { @include block-grids('large') }
